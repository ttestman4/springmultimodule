plugins {
	id 'java'
	id 'org.springframework.boot'
	id 'io.spring.dependency-management'
	id 'org.asciidoctor.jvm.convert'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'de.codecentric:spring-boot-admin-starter-client'
	implementation 'org.apache.kafka:kafka-streams'
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-json'
	implementation 'org.springframework.cloud:spring-cloud-config-server'
	implementation 'org.springframework.cloud:spring-cloud-stream'
	implementation 'org.springframework.cloud:spring-cloud-stream-binder-kafka'
	implementation 'org.springframework.cloud:spring-cloud-stream-binder-kafka-streams'
	implementation 'org.springframework.kafka:spring-kafka'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.cloud:spring-cloud-stream-test-binder'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
}

dependencyManagement {
  imports {
    mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	mavenBom "de.codecentric:spring-boot-admin-dependencies:${springBootAdminVersion}"
  }
}

tasks.named('test') {
	useJUnitPlatform()
	outputs.dir snippetsDir
}

tasks.named('asciidoctor') {
  inputs.dir snippetsDir
  dependsOn test
}


bootJar {
	dependsOn asciidoctor
	from ("${asciidoctor.outputDir}/html5") {
		into 'static/docs'
	}
}