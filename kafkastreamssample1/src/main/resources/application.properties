server.port = 8091
# spring.kafka.producer.key-serializer = org.springframework.kafka.support.serializer.StringSerializer
# spring.kafka.producer.value-serializer = org.springframework.kafka.support.serializer.JsonSerializer
# spring.kafka.producer.properties.spring.json.type.mapping = emp:com.common.Employee
# spring.kafka.producer.value-serializer = org.apache.kafka.common.serialization.StringSerializer
# spring.kafka.consumer.key-deserializer = org.apache.kafka.common.serialization.ByteArrayDeserializer
# spring.kafka.consumer.value-deserializer = org.apache.kafka.common.serialization.ByteArrayDeserializer
# spring.kafka.consumer.value-deserializer = org.apache.kafka.common.serialization.ByteArrayDeserializer
# spring.kafka.consumer.value-deserializer = org.apache.kafka.common.serialization.StringDeserializer
# spring.kafka.consumer.value-deserializer = org.springframework.kafka.support.serializer.JsonDeserializer

spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
# spring.kafka.producer.properties.spring.json.type.mapping = emp:com.common.Employee
# spring.kafka.producer.properties.spring.json.trusted.packages = com.common

spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
# spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer

# spring.kafka.consumer.properties.spring.json.type.mapping = emp:com.common.Employee
spring.kafka.consumer.properties.spring.json.trusted.packages = com.example

spring.kafka.streams.application-id=spring-boot-streams

spring.kafka.streams.default.deserialization.exception.handler=org.apache.kafka.streams.errors.LogAndContinueExceptionHandler
# spring.kafka.streams.default.production.exception.handler=org.apache.kafka.streams.errors.DefaultProductionExceptionHandler

log4j.debug=true
log4j.rootLogger=INFO, CON
log4j.appender.CON=org.apache.log4j.ConsoleAppender

# logging.pattern.console=%d [%t] %m%n
# logging.level.root=error
# logging.level.scst.app1=info